version: '3.1'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  front-tier:
  back-tier:

services:

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 10.8.0.1:5000:9090
    links:
      - alertmanager:alertmanager
    networks:
      - back-tier
    restart: always

  alertmanager:
    image: prom/alertmanager
    ports:
      - 10.8.0.1:5002:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  grafana:
    image: foexle/grafana-plugins
    user: "104"
    depends_on:
      - prometheus
    ports:
      - 10.8.0.1:5004:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always

  telegraf:
    image: telegraf
    environment:
      - HOST_PROC=/host/proc
      - HOST_SYS=/rootfs/sys
      - HOST_ETC=/rootfs/etc
    volumes:
      - /proc/:/host/proc:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./telegraf/:/etc/telegraf/
      - /sys:/rootfs/sys:ro
      - /etc:/rootfs/etc:ro
    networks:
      - back-tier
